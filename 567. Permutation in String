Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string's permutations is the substring of the second string.

Example 1:
Input:s1 = "ab" s2 = "eidbaooo"
Output:True
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:
Input:s1= "ab" s2 = "eidboaoo"
Output: False


class Solution {
public:
    bool checkInclusion(string s1, string s2) {
         vector<int> cnts(256, 0);
        for (char ch : s1) {
            cnts[ch]++;
        }

        int left = s1.size();
        for (int i = 0, j = 0; j < s2.size(); j++) {
            if (cnts[s2[j]]-- > 0) {
                left--;
            }

            while (left == 0) {
                if (j + 1 - i == s1.size()) {
                    return true;
                }
                if (++cnts[s2[i++]] > 0) {
                    left++;
                }
            }
        }
        return false;
    }
};
